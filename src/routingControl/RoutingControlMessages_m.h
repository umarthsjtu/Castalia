//
// Generated file, do not edit! Created by opp_msgc 4.2 from RoutingControlMessages.msg.
//

#ifndef _ROUTINGCONTROLMESSAGES_M_H_
#define _ROUTINGCONTROLMESSAGES_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include <list>
typedef std::list<int> IntList;
// }}



/**
 * Class generated from <tt>RoutingControlMessages.msg</tt> by opp_msgc.
 * <pre>
 * message routingcontrolmessage {
 * double a;
 * double b;
 * double c;
 * IntList neighbor;
 * };
 * </pre>
 */
class routingcontrolmessage : public ::cMessage
{
  protected:
    double a_var;
    double b_var;
    double c_var;
    IntList neighbor_var;

  private:
    void copy(const routingcontrolmessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const routingcontrolmessage&);

  public:
    routingcontrolmessage(const char *name=NULL, int kind=0);
    routingcontrolmessage(const routingcontrolmessage& other);
    virtual ~routingcontrolmessage();
    routingcontrolmessage& operator=(const routingcontrolmessage& other);
    virtual routingcontrolmessage *dup() const {return new routingcontrolmessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual double getA() const;
    virtual void setA(double a);
    virtual double getB() const;
    virtual void setB(double b);
    virtual double getC() const;
    virtual void setC(double c);
    virtual IntList& getNeighbor();
    virtual const IntList& getNeighbor() const {return const_cast<routingcontrolmessage*>(this)->getNeighbor();}
    virtual void setNeighbor(const IntList& neighbor);
};

inline void doPacking(cCommBuffer *b, routingcontrolmessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, routingcontrolmessage& obj) {obj.parsimUnpack(b);}


#endif // _ROUTINGCONTROLMESSAGES_M_H_
